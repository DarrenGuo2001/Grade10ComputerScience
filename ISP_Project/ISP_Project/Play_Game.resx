<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Mole.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>